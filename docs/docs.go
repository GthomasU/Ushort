// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "email": "gabrielthomas300@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/url": {
            "post": {
                "description": "Endpoint for create shorted url",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Url"
                ],
                "summary": "Create Shorted Url",
                "parameters": [
                    {
                        "description": "Url to short",
                        "name": "url",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ResponseShortUrl"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseShortUrl"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ResponseBadRequest"
                        }
                    }
                }
            }
        },
        "/api/v1/url/{urlId}": {
            "put": {
                "description": "Endpoint for update original url",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Url"
                ],
                "summary": "Update original Url",
                "parameters": [
                    {
                        "description": "Url to update",
                        "name": "url",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PostShortUrl"
                        }
                    },
                    {
                        "type": "string",
                        "description": "UrlId to update",
                        "name": "urlId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "description": "Endpoint for remove shorted url",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Url"
                ],
                "summary": "Remove Shorted Url",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UrlId to remove",
                        "name": "urlId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/r/{urlId}": {
            "get": {
                "description": "Endpoint for redirect shorted url",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Redirect"
                ],
                "summary": "Redirect an Url",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UrlId to redirect",
                        "name": "urlId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Found"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        }
    },
    "definitions": {
        "api.PostShortUrl": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "api.ResponseBadRequest": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "description": "` + "`" + `json: errorCode` + "`" + `",
                    "type": "string"
                },
                "errorMessage": {
                    "description": "` + "`" + `json:errorMessage` + "`" + `",
                    "type": "string"
                }
            }
        },
        "api.ResponseShortUrl": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Ushort API",
	Description:      "This is a Ushort API documentation.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
